DROP TABLE IF EXISTS CATEGORIES, COMPILATIONS,COMPILATION_EVENT, USERS, EVENTS, REQUESTS;

CREATE TABLE IF NOT EXISTS CATEGORIES(
id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
name VARCHAR UNIQUE
);

CREATE TABLE IF NOT EXISTS COMPILATIONS(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN NOT NULL,
    title VARCHAR(64) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS USERS(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    email VARCHAR UNIQUE NOT NULL
);


CREATE TABLE IF NOT EXISTS EVENTS(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(2024) NOT NULL,
    description TEXT NOT NULL,
    category_id BIGINT NOT NULL,
    confirmed_requests BIGINT NOT NULL DEFAULT 0,
    created_date TIMESTAMP  NOT NULL DEFAULT NOW(),
    event_date TIMESTAMP  NOT NULL,
    initiator BIGINT NOT NULL,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    paid BOOLEAN NOT NULL,
    participation_limit INTEGER NOT NULL,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN NOT NULL,
    state VARCHAR(16) NOT NULL DEFAULT 'PENDING',
    title VARCHAR(128) NOT NULL,
    compilation_id BIGINT,
    CONSTRAINT EVENTS_INITIATOR_ID_FK FOREIGN KEY (initiator) REFERENCES USERS(id) ON DELETE CASCADE,
    CONSTRAINT EVENTS_CATEGORY_ID_FK FOREIGN KEY (category_id) REFERENCES CATEGORIES(id),
    CONSTRAINT EVENTS_COMPILATION_ID_FK FOREIGN KEY (compilation_id) REFERENCES COMPILATIONS(id)
);


CREATE TABLE IF NOT EXISTS REQUESTS(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id BIGINT NOT NULL,
    status VARCHAR(16) NOT NULL,
    requester BIGINT NOT NULL,
    CONSTRAINT REQUESTS_REQUESTER_FK FOREIGN KEY (requester) REFERENCES USERS(id),
    CONSTRAINT REQUESTS_EVENT_ID_FK FOREIGN KEY (event_id) REFERENCES EVENTS(id)
);
CREATE UNIQUE INDEX IF NOT EXISTS REQUESTS_REQUESTER_EVENT_IDX ON REQUESTS(requester, event_id);